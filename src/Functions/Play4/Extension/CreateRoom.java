/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Functions.Play4.Extension;

import Menu.FormMain;
import Menu.PanelMenu;
import Utils.Image.ImageUtils;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.PrintStream;
import java.net.ServerSocket;
import java.net.Socket;

/**
 *
 * @author 9999
 */
public class CreateRoom extends javax.swing.JPanel {

    /**
     * Creates new form CreateRoom
     */
    public CreateRoom() {
        initComponents();
        InitializeOptionalButtons();
        ImageUtils.InitializeBackground(this, "menu.png", 864, 480);
    }

    private JButton btnHost = new JButton("HOST");
    private JButton btnJoin = new JButton("FIND");
    private JLabel lbHostIP = new JLabel("Your IP Address");
    private JTextField tfHostIP = new JTextField();

    private void InitializeOptionalButtons() {
        btnHost.setBounds(100, 100, 100, 35);
        btnHost.setFont(new Font("Arial", Font.BOLD, 18));
        btnHost.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                try {
                    server = new ServerSocket(1001);
                    new Thread(new Runnable() {
                        @Override
                        public void run() {
                            try {
                                socket = server.accept();
                            } catch (IOException ex) {
                                throw new RuntimeException(ex);
                            }
                        }
                    }).start();
                } catch (IOException ex) {
                    throw new RuntimeException(ex);
                }
            }
        });
        this.add(btnHost);

        btnJoin.setBounds(100, 160, 100, 35);
        btnJoin.setFont(new Font("Arial", Font.BOLD, 18));
        btnJoin.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {

            }
        });
        this.add(btnJoin);

        lbHostIP.setBounds(100, 220, 100, 35);
        lbHostIP.setFont(new Font("Arial", Font.BOLD, 18));
        this.add(lbHostIP);

        tfHostIP.setBounds(100, 280, 100, 35);
        tfHostIP.setFont(new Font("Arial", Font.BOLD, 18));
        tfHostIP.setEnabled(false);
        tfHostIP.setBackground(Color.WHITE);
        this.add(tfHostIP);
    }

    private ServerSocket server;
    private Socket socket;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();

        setLayout(null);

        btnBack.setText("BACK");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack);
        btnBack.setBounds(6, 6, 72, 23);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        FormMain.Instance().setContentPane(PanelMenu.Instance());
        FormMain.Instance().validate();
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    // End of variables declaration//GEN-END:variables
}
