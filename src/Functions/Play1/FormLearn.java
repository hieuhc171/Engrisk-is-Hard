/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Functions.Play1;

import Functions.Definition.PanelDefinition;
import Utils.Constants;
import Utils.NetUtils;
import Utils.SoundUtils;
import Utils.TextUtils;
import Utils.WordUtils.WordObject;

import javax.imageio.ImageIO;
import javax.swing.*;
import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author 9999
 */
public class FormLearn extends javax.swing.JFrame {

    private static String word;
    /**
     * Creates new form FormLearn
     */
    public FormLearn(String word) {
        FormLearn.word = word;
        initComponents();
        NetUtils.DoGetRequest(Constants.WORD_DEFINITION_URL + word, result -> {
            json = result;
        });
        WordObject wordObject = new WordObject(json);
        DisplayWord(wordObject);
    }
    private String json;
    private JTextPane tfOutput = new JTextPane();
    private JScrollPane scrollOutput = new JScrollPane();
    private void DisplayWord(WordObject wordObject) {

        scrollOutput.setBackground(new java.awt.Color(255, 255, 255));
        scrollOutput.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        scrollOutput.setPreferredSize(new java.awt.Dimension(400, 380));
        tfOutput.setFont(new java.awt.Font("Segoe UI", Font.PLAIN, 14)); // NOI18N
        scrollOutput.setViewportView(tfOutput);

        tfOutput.setText("");
        scrollOutput.setViewportView(tfOutput);
        wordObject.ParseViWord();
        TextUtils.AppendToPane(tfOutput, wordObject.enWord + " - " + wordObject.viWord + "\n", Color.RED, 22);
        for(int i = 0; i < wordObject.phonetics.size(); i++) {
            if(wordObject.phonetics.get(i).text != "" && wordObject.phonetics.get(i).audio != "") {
                TextUtils.AppendToPane(tfOutput, " " + wordObject.phonetics.get(i).text + "\n", Color.BLUE, 16);
                Image image;
                try {
                    image = ImageIO.read(new File(System.getProperty("user.dir") + "/materials/definition_buttons/audio.png")).getScaledInstance(14, 14, Image.SCALE_SMOOTH);
                    ImageIcon icon = new ImageIcon(image);
                    JButton btn = new JButton();
                    btn.setIcon(icon);
                    String soundURL = wordObject.phonetics.get(i).audio;
                    btn.addMouseListener(new MouseAdapter() {
                        @Override
                        public void mousePressed(MouseEvent e)
                        {
                            SoundUtils.PlaySoundFromURL(soundURL);
                        }
                    });
                    tfOutput.insertComponent(btn);
                } catch (IOException ex) {
                    Logger.getLogger(PanelDefinition.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        int index = 1;
        for(int i = 0; i < wordObject.definitions.size(); i++) {
            if(i == 0 || wordObject.definitions.get(i).partOfSpeech != wordObject.definitions.get(i-1).partOfSpeech) {
                TextUtils.AppendToPane(tfOutput, "\n" + wordObject.definitions.get(i).partOfSpeech + "\n", Color.GREEN, 20);
                index = 1;
            }
            TextUtils.AppendToPane(tfOutput, (index != 1 ? "\n" : "") + index++ + ". " + wordObject.definitions.get(i).text + "\n", Color.BLACK, 16);
            if(!wordObject.definitions.get(i).example.isBlank())
                TextUtils.AppendToPane(tfOutput, "Example: " + wordObject.definitions.get(i).example + "\n", Color.MAGENTA, 14);
        }

        scrollOutput.setBounds(0, 0, 400, 380);
        tfOutput.setCaretPosition(0);
        this.getContentPane().add(scrollOutput);

        pack();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
//        getContentPane().setLayout(null);

    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormLearn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormLearn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormLearn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormLearn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormLearn(word).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
